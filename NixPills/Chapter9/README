# Chapter 9 Nix Pills
Before building download the tar for GNU Hello http://ftp.gnu.org/gnu/hello/hello-2.10.tar.gz
into the current directory

Then build with
     nix-build hello.nix

## autotools.nix
This is a nix file that calls builder.sh which is a generic builder for any autotools projects
(i.e. the configure ; make ; make install style projects)

## hello.nix
This is a nix file that adds the extra attributes (mainly the location of the tar.gz file)
that autotools doesn't cover for making GNU Hello

## runtime dependencies

You can list the runtime dependencies for a nix package with
  $ nix-instantiate hello.nix
    /nix/store/z77vn965a59irqnrrjvbspiyl2rph0jp-hello.drv
  $ nix-store -r /nix/store/z77vn965a59irqnrrjvbspiyl2rph0jp-hello.drv
    /nix/store/a42k52zwv6idmf50r9lps1nzwq9khvpf-hello
  $ nix-store -q --references /nix/store/a42k52zwv6idmf50r9lps1nzwq9khvpf-hello
    /nix/store/94n64qy99ja0vgbkf675nyk39g9b978n-glibc-2.19
    /nix/store/8jm0wksask7cpf85miyakihyfch1y21q-gcc-4.8.3
    /nix/store/a42k52zwv6idmf50r9lps1nzwq9khvpf-hello

## stripping unnecessary dependencies
Nix uses ld rpath to figure out runtime depedencies, however this include some dependencies
that aren't really necessary (such as gcc in the example above)
To strip unnecessary dependencies we add the following command to the end of builder.sh
  find $out -type f -exec patchelf --shrink-rpath '{}' \; -exec strip '{}' \; 2>/dev/null